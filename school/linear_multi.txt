import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from pandas import DataFrame, Series
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

datafile = 'C:\\Users\\admin\\Desktop\\机器学习精品课\\相关材料\\线性回归\\程序和数据\\Advertising.xlsx'
data = pd.read_excel(datafile)
examDf = DataFrame(data)

new_examDf = examDf.ix[:,0:]

print(new_examDf.corr())
#sns.pairplot(data, x_vars=['TV','radio','newspaper'], y_vars='sales', size=7, aspect=0.8, kind='reg')
#plt.show()

X_train, X_test, Y_train, Y_test = train_test_split(new_examDf.ix[:,:3], new_examDf.sales, train_size=0.5)

print('factor source data:', new_examDf.ix[:,:3].shape, '; train set:', X_train.shape, '; test set:', X_test.shape)
print('result variables source data:', examDf.sales.shape, ';train set:', Y_train.shape, ';test set:', Y_test.shape)

X_train = X_train.values.reshape(-1,3)
X_test = X_test.values.reshape(-1,3)

model = LinearRegression()
model.fit(X_train, Y_train)

a = model.coef_
b = model.intercept_

print('best fitting function is: Y = ', round(a[0],2),'*X1+', round(a[1],2), '*X2+', round(a[2],2), '*X3+', b )

Y_pred = model.predict(X_test)

plt.plot(range(len(Y_pred)), Y_pred, 'red', linewidth=2.5, label='predict data')
plt.plot(range(len(Y_test)), Y_test, 'green', label='test data')
plt.legend(loc=2)
plt.show()







